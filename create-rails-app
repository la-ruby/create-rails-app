#!/bin/bash -ex

VERSION='6-1-stable'
DIR=$(realpath "$(dirname "${BASH_SOURCE[0]}")")

main() {
  create_temp_dir
  check_ruby_version
  download_railtie
  install_rails
  fix_gemfile
  setup_pundit
  setup_factory_bot
  setup_rspec
  setup_turbo
  setup_stimulus
  setup_tailwind
  demos
  release
}

##
# runs rails new ...
#
install_rails() {
  cd ~/.create-rails-app/rails
  bundle exec railties/exe/rails new ~/.create-rails-app/created-rails-app --dev --database=postgresql
}

##
# Create a temporary directory
#
create_temp_dir() {
  rm -rf ~/.create-rails-app
  mkdir ~/.create-rails-app
}

##
# Targeting latest ruby version
#
check_ruby_version() {
  expected_version=$(curl -s https://cache.ruby-lang.org/pub/ruby/index.txt | tail -n 1 | cut -f1 | cut -d '-' -f2)
  found_version=$(ruby -v | perl -nle 'm/ruby ([\d\.]*)/; print $1')
  if ! [ "$expected_version" = "$found_version" ]; then
    echo "error: Ruby $expected_version expected"
    exit 1
  fi  
}

##
# Download railtie
#
download_railtie() {
  git clone -b $VERSION --single-branch https://github.com/rails/rails ~/.create-rails-app/rails
  cd ~/.create-rails-app/rails
  bundle install
}

##
# Re-point gemfile entry for rails gem
#
fix_gemfile() {
  cd ~/.create-rails-app/created-rails-app
  ${DIR}/bin/sed -i "/^gem 'rails'/c\REMOVED" Gemfile # remove line
  replacement="gem 'rails', :github => 'rails/rails', :branch => '${VERSION}'"
  ${DIR}/bin/sed -i "/^REMOVED/c\\$replacement" Gemfile # add back line
  rm Gemfile.lock
  bundle install
}

##
# Install turbo
#
setup_turbo() {
  echo "gem 'turbo-rails', :github => 'hotwired/turbo-rails', :branch => 'main'" >> Gemfile
  ./bin/bundle install
  ./bin/rails turbo:install  
}

##
# Install stimulus js
#
setup_stimulus() {
  cd ~/.create-rails-app/created-rails-app
  echo "gem 'stimulus-rails', :github => 'hotwired/stimulus-rails', :branch => 'main'" >> Gemfile
  ./bin/bundle install
  ./bin/rails stimulus:install
}

##
# Install tailwind css
#
setup_tailwind() {
  cd ~/.create-rails-app/created-rails-app
  ./bin/bundle add tailwindcss-rails
  ./bin/rails tailwindcss:install
}


##
# Setup rspec
#
setup_rspec() {
  cd ~/.create-rails-app/created-rails-app
  cat <<- 'EOF' >> Gemfile
group :development, :test do
  gem 'rspec-rails'
end
EOF
  bundle install
  ./bin/rails generate rspec:install
}

##
# Setup factory bot
#
setup_factory_bot() {
  cd ~/.create-rails-app/created-rails-app
  cat <<- 'EOF' >> Gemfile
group :development, :test do
  gem 'factory_bot_rails'
end
EOF
  bundle install
}

##
# Setup pundit
#
setup_pundit() {
  cd ~/.create-rails-app/created-rails-app
  echo -e "\ngem 'pundit'" >> Gemfile
  bundle install
  bundle exec rails g pundit:install
}

##
# Sets up some basic demo pages
#
demos() {
  cd ~/.create-rails-app/created-rails-app
  bin/rails generate scaffold post title:string body:text published:boolean  
  cat ${DIR}/demos/posts_index.html.erb >> app/views/posts/index.html.erb
  cat ${DIR}/demos/posts_index_tailwind.html.erb >> app/views/posts/index.html.erb
  cat ${DIR}/demos/hello_controller.js > app/javascript/controllers/hello_controller.js
}

release() {
  cd ~/.create-rails-app/
  git clone https://github.com/la-ruby/created-rails-app.git
  echo '################################################################################'
  ls -la ~/.create-rails-app/created-rails-app/
}

main
