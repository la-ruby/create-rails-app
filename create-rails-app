#!/bin/bash -ex

main() {
  DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" # where this script is
  TARGET="6-1-stable"         # target rails version
  USE_CACHE_A="${USE_CACHE_A:-0}"
  USE_CACHE_B="${USE_CACHE_B:-0}"

  prereq_ruby_version
  prereq_stub

  cd ${DIR}/build/stub
  [[ $USE_CACHE_B -eq 1 ]] || bundle exec railties/exe/rails new ../rails-app --dev --database=postgresql
  cd ${DIR}/build/rails-app
  git add --all
  git commit -m "Initial commit"
  fix_gemfile
  bundle exec rails db:drop db:create db:migrate
  git add --all
  git commit -m "bundle exec rails db:drop db:create db:migrate"

  setup_devise
  setup_pundit
  setup_bootstrap

  push_changes
}

##
# Targeting latest ruby version
#
prereq_ruby_version() {
  expected_version=$(curl -s https://cache.ruby-lang.org/pub/ruby/index.txt | tail -n 1 | cut -f1 | cut -d '-' -f2)
  found_version=$(ruby -v | perl -nle 'm/ruby ([\d\.]*)/; print $1')
  if ! [ "$expected_version" = "$found_version" ]; then
    echo "error: Ruby $expected_version expected"
    exit 1
  fi  
}

##
# Download rails stub
#
prereq_stub() {
  cd ${DIR}
  [[ $USE_CACHE_A -eq 1 ]] || git clone -b $TARGET --single-branch https://github.com/rails/rails build/stub
  cd ${DIR}/build/stub
  RAILS_COMMIT=$(git rev-parse --short HEAD) # comes in handy later
  bundle install
}

fix_gemfile() {
  ruby -i -pe "sub(/gem 'rails', path: .*/, \"gem 'rails', github: 'rails/rails', ref: '${RAILS_COMMIT}'\")" Gemfile
  git add Gemfile
  git commit -m "Repoint path"
  bundle install
  git add --all
  git commit -m "Using rails version ${RAILS_COMMIT}"
}

# A stock standard devise installation
setup_devise() {
  cd ${DIR}/build/rails-app
  echo -e "\ngem 'devise'" >> Gemfile
  bundle install
  git add --all
  git commit -m "Setup devise"
  mkdir doc/
  bundle exec rails generate devise:install | tee doc/devise.txt
  git add --all
  git commit -m "Setup devise"
}

setup_pundit() {
  cd ${DIR}/build/rails-app
  echo -e "\ngem 'pundit'" >> Gemfile
  bundle install
  bundle exec rails g pundit:install
  git add --all
  git commit -m "Setup pundit"
}

setup_bootstrap() {
  cd ${DIR}/build/rails-app
  yarn add bootstrap jquery popper.js expose-loader
  gsed -i '$d' config/webpack/environment.js # strips last line
  cat <<- 'EOF' >> config/webpack/environment.js
  	
  	// https://github.com/webpack-contrib/expose-loader/blob/master/README.md
  	environment.loaders.append('expose', {
  	        test: require.resolve('jquery'),
  	        loader: 'expose-loader',
  	        options: {
  	          // For `underscore` library, it can be `_.map map` or `_.map|map`
  	          exposes: ['jquery', '$', 'jQuery']
  	        }
  	});
          // needed?
  	// https://www.vic-l.com/setup-bootstrap-in-rails-6-with-webpacker-for-development-and-production/
  	//const webpack = require('webpack')
  	//environment.plugins.append('Provide',
  	//  new webpack.ProvidePlugin({
  	//    $: 'jquery',
  	//    jQuery: 'jquery',
  	//    Popper: ['popper.js', 'default']
  	//  })
  	//)
  	module.exports = environment
EOF
  s2="\    <%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>"
  gsed -i "/javascript_pack_tag.*/a $s2" app/views/layouts/application.html.erb
  cat <<- 'EOF' >> app/javascript/packs/application.js
     import '../stylesheets/application';
EOF
  echo 'import "bootstrap/dist/js/bootstrap";' > app/javascript/packs/bootstrap.js
  s2="\    <%= javascript_pack_tag 'bootstrap',                 'data-turbolinks-track': 'reload' %>"
  gsed -i "/stylesheet_pack_tag..application/a $s2" app/views/layouts/application.html.erb
  mkdir app/javascript/stylesheets
  cat <<- 'EOF' > app/javascript/stylesheets/application.scss
	@import "node_modules/bootstrap/scss/functions";
	@import "node_modules/bootstrap/scss/variables";
	@import "node_modules/bootstrap/scss/mixins";
	@import "node_modules/bootstrap/scss/root";
	@import "node_modules/bootstrap/scss/reboot";
	@import "node_modules/bootstrap/scss/type";
	@import "node_modules/bootstrap/scss/images";
	@import "node_modules/bootstrap/scss/code";
	@import "node_modules/bootstrap/scss/grid";
	@import "node_modules/bootstrap/scss/tables";
	@import "node_modules/bootstrap/scss/forms";
	@import "node_modules/bootstrap/scss/buttons";
	@import "node_modules/bootstrap/scss/transitions";
	@import "node_modules/bootstrap/scss/dropdown";
	@import "node_modules/bootstrap/scss/button-group";
	@import "node_modules/bootstrap/scss/input-group";
	@import "node_modules/bootstrap/scss/custom-forms";
	@import "node_modules/bootstrap/scss/nav";
	@import "node_modules/bootstrap/scss/navbar";
	@import "node_modules/bootstrap/scss/card";
	@import "node_modules/bootstrap/scss/breadcrumb";
	//@import "node_modules/bootstrap/scss/pagination";
	@import "node_modules/bootstrap/scss/badge";
	//@import "node_modules/bootstrap/scss/jumbotron";
	@import "node_modules/bootstrap/scss/alert";
	//@import "node_modules/bootstrap/scss/progress";
	@import "node_modules/bootstrap/scss/media";
	@import "node_modules/bootstrap/scss/list-group";
	@import "node_modules/bootstrap/scss/close";
	@import "node_modules/bootstrap/scss/toasts";
	@import "node_modules/bootstrap/scss/modal";
	@import "node_modules/bootstrap/scss/tooltip";
	@import "node_modules/bootstrap/scss/popover";
	//@import "node_modules/bootstrap/scss/carousel";
	//@import "node_modules/bootstrap/scss/spinners";
	@import "node_modules/bootstrap/scss/utilities";
	//@import "node_modules/bootstrap/scss/print";
	//@import 'node_modules/bootstrap/scss/bootstrap';
	// ^ this bit is not needed, as we're importing individually above
EOF
  git add --all; git commit -m "Setup bootstrap"

}
                   
push_changes() {
  cd ${DIR}
  git clone https://github.com/la-ruby/rails-app.git build/rails-app-duplicate
  cd ${DIR}/build/rails-app-duplicate
  KNOWN_RAILS_FILES=(.browserslistrc
                     .gitignore
                     .ruby-version
                     Gemfile
                     Gemfile.lock
                     README.md
                     Rakefile
                     app
                     babel.config.js
                     bin
                     config
                     config.ru
                     db
                     lib
                     log
                     node_modules
                     package.json
                     postcss.config.js
                     public
                     storage
                     test
                     tmp
                     vendor
                     yarn.lock
                     doc)
  for file in "${KNOWN_RAILS_FILES[@]}"
  do
     sleep 0.5 && (rm -rf $file || true)
  done
  [ $(ls -1A . | wc -l) -eq 1 ] # make sure dir is clean (only .git remains)
  rsync -aP --exclude='.git/' --exclude='node_modules/*' ${DIR}/build/rails-app/ ${DIR}/build/rails-app-duplicate/
  git add --all
  git commit -m "Daily update"
  git remote remove origin
  git remote add origin https://${GH_TOKEN}@github.com/la-ruby/rails-app.git > /dev/null 2>&1
  [ "${TRAVIS}" = "true" ] && git push --quiet origin master
}

main "$@"
echo "ok"
